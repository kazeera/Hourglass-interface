#: import Label kivy.uix.label.Label
#: import Factory kivy.factory.Factory
<Popup>
    title_size: app.text_size

<Label>
    font_size: app.text_size

<TextInput>
    font_size: app.text_size-7

<Button>
    font_size: app.text_size

<TabbedPanelHeader>:
    # background_normal: 'blue.png'
    background_down: 'Icons/teal.jpg'
    font_size: app.text_size

<CustomCheckbox>
    CheckBox:
        id: chckbx
        size_hint: .3, 1
        active: root.check_box

    Label:
        size_hint: .7, 1
        size_hint_x: 0.6
        text_size: self.size
        halign: 'left'
        valign: 'middle'
        text: root.label_text

<MyOption@SpinnerOption>:
    font_size: app.text_size

<CustomSpinner>
    Label:
        text: root.label_text
    AnchorLayout:
        Spinner:
            size_hint: .8, .9
            id: spinner
            text: root.initial_option
            option_cls: Factory.get("MyOption")
            values: root.spinner_list
            on_text: root.selected(root.id_parameter, spinner.text)

<Welcome>
    BoxLayout:
        orientation: "vertical"
        size: root.width, root.height
        padding: 50
        spacing: 20

        Image:
            source: 'Icons/hourglass.gif'

        Label:
            text: 'Follow the tabs on the top to go through the workflow.'
        Label:
            text: 'Hit the "Run" button at the end!'

<UploadTable>
    GridLayout:
        cols: 1
        size: root.width, root.height

        GridLayout:
            cols: 2

            Label:
                text: 'Name of Dataset'

            TextInput:
                id: dataset_name
                multiline: False
                hint_text: 'Enter Text Here'
                on_text: root.update_name()
                font_size: app.text_size

        UploadFilePopup:
            id_parameter: 'filepath_matrix'
            label_text: 'Numeric Matrix\n'#Rows (samples) x columns (features/parameters)'

        UploadFilePopup:
            id_parameter: 'filepath_rowAnn'
            label_text: 'Row Annotations\n'#First column must be row names of numeric matrix.'

        UploadFilePopup:
            id_parameter: 'filepath_colAnn'
            label_text: 'Column Annotations'#\nFirst column must be column names of numeric matrix.'

<UploadFilePopup>
    id: root.id_parameter

    Label:
        text_size: self.size    
        halign: 'center'
        valign: 'middle'
        text: root.label_text
    Button:
        id: upload_button
        text: root.button_text
        on_press: root.open_popup()

<FileChoosePopup>:
    title: "Choose a file"
    size_hint: .9, .9
    auto_dismiss: False

    BoxLayout:
        orientation: "vertical"
        FileChooser:
            id: filechooser
            on_selection: root.load(filechooser.selection)
            FileChooserIconLayout

        BoxLayout:
            size_hint: (1, 0.1)
            pos_hint: {'center_x': .5, 'center_y': .5}
            spacing: 20
            Button:
                text: "Cancel"
                on_release: root.dismiss()

<ComparisonTable>:
	GridLayout:
		cols:1
		ScrollView:
			GridLayout:
				id: container
				cols: 1
				size_hint_y: None
				height: self.minimum_height
				row_force_default: True
				row_default_height: dp(30)

	    AnchorLayout:
            Button:
                size_hint: .5, .5
                background_color: [1, 1, 0, 1]
			    text: "Add a comparison (row)"
			    on_release: root.add_a_row()

        # GridLayout:
        #            cols:2
        #		    Button:
		#	    text: "Add a comparison (row)"
		#	    on_release: root.add_a_row()
        #    Button:
		#	    text: "Remove first comparison (row)"
		#	    on_release: root.remove_a_row2()

<ComparisonTableRow>:
    orientation: "horizontal"
    id: id_number2

    # Label:
        # id: id_number2
        # text: root.id_number2
        # on_press: root.remove_a_row()

    Spinner:
        id: main_comparison
        values: app.getRowAnnCols()
        text: 'Main Comparison'
        ann: 'rowAnn'
        on_text: root.update_row_info()
        font_size: root.text_size

    TextInput:
        id: custom_comparison
        hint_text: "Or Custom Comparison"
        multiline: False
        on_text: root.update_row_info()
        font_size: root.text_size

    Spinner:
        id: subgroup
        text: 'Subgroup'
        values: app.getRowAnnCols()
        ann: 'rowAnn'
        on_text: root.update_row_info()
        font_size: root.text_size

    TextInput:
        id: within_group
        hint_text: 'Within Groups'
        multiline: False
        on_text: root.update_row_info()
        font_size: root.text_size

    TextInput:
        id: filter
        hint_text: "Filter"
        multiline: False
        on_text: root.update_row_info()
        font_size: root.text_size

    GridLayout:
        cols: 2
        CheckBox:
            id: by_sample
            active: True
        Label:
            font_size: root.text_size
            text: 'By Sample'

    GridLayout:
        cols: 2
        CheckBox:
            id: by_patient
            active: False
        Label:
            font_size: root.text_size
            text: 'By Patient'

<FeatureSets>
    TabbedPanel:
        size: root.width, root.height
        do_default_tab: False
        tab_width: 300

        TabbedPanelItem:
            text: '1. Select Columns'
            FeatureTab1:

        TabbedPanelItem:
            text: '2. Pick Parameters'
            FeatureTab2:

        TabbedPanelItem:
            text: '3. Define Sets'
            FeatureTab3:

<FeatureTab1>:
    cols: 1
    Label:
        text: 'Select columns from column annotation files.'
    CustomSpinner:
        id_parameter: 'param_column'
        label_text: 'Parameter column'
        spinner_list: app.getColAnnCols()
        ann: 'colAnn'

    CustomSpinner:
        id_parameter: 'feature_column'
        label_text: 'Feature column'
        spinner_list: app.getColAnnCols()
        ann: 'colAnn'

<FeatureTab2>:
    viewclass: 'FeatureTab2Label'
    RecycleBoxLayout:
        default_size: None, dp(56)
        default_size_hint: 1, None
        size_hint_y: None
        height: self.minimum_height
        orientation: 'vertical'

<FeatureTab2Label>
    id: id_FeatureTab2
    orientation: 'horizontal'

    Label:
        text: root.label_text

    Spinner:
        id: std_parameter
        values: app.getParamsFeature(root.label_text)
        text: 'Standard Parameter (required)'
        on_text: root.update_row_info()
        ann: 'paramsFeat'

    Spinner:
        id: alt_parameter
        values: app.getParamsFeature(root.label_text)
        text: 'Alternative Parameter'
        on_text: root.update_row_info()
        ann: 'paramsFeat'


<FeatureTab3>
	GridLayout:
		cols:1

		ScrollView:
			GridLayout:
				id: container
				cols: 1
				size_hint_y: None
				height: self.minimum_height
				row_force_default: True
				row_default_height: dp(40)

	    AnchorLayout:
            Button:
                size_hint: .5, .5
                background_color: [1, 1, 0, 1]
			    text: "New set (Add a row)"
			    on_release: root.add_a_row()

            # Button:
			#     text: "Remove first set (Remove row)"
			#     on_release: root.remove_a_row2()

<FeatureTab3Row>
    orientation: "horizontal"

    TextInput:
        id: group_name
        hint_text: "Name of Group"
        multiline: False
        on_text: root.update_row_info()
        size_hint: .5,1

    TextInput:
        id: group_list
        hint_text: "List of features (e.g. Gene1,Gene2,Gene3) or groups"
        on_text: root.update_row_info()
    Spinner:
        id: alternative
        text: root.run_alt
        option_cls: Factory.get("MyOption")
        values: [root.run_alt, root.dont_run_alt]
        on_text: root.update_row_info()
        size_hint: .3,1

    # CheckBox:
    #    id: alternative
    #     size_hint: .3,1

    # Label:
    #    text: "Alternative"
    #    size_hint: .4,1

    # Button:
    #     text: "Remove row"
    #     on_release: root.remove_row()

<CustomizeColors>
    viewclass: 'CCBoxlayout'

    RecycleGridLayout:
        default_size: None, dp(56)
        default_size_hint: 1, None
        size_hint_y: None
        height: self.minimum_height
        # width: self.minimum_width # new
        multiselect: True
        touch_multiselect: True
        cols: 1


<CCBoxlayout>
    orientation: 'horizontal'
    CCButton:
        button_text: root.rowAnn_val


<CCButton>
    Button:
        id: color_button
        text: root.button_text
        background_normal: 'ffffff'
        background_color: root.rowAnn_val_color
        on_press: root.open_popup()

<ColorPopup>:
    title: 'Select a color'
    size_hint: .9, .9
    id: popupcolor
    auto_dismiss: False

    BoxLayout:
        orientation: 'vertical'

        ColorPicker:
            id: colorpicker
            size_hint: 1.0, 1.0

        Button:
            text: 'Select and Close Window'
            size_hint: 1.0, 0.2
            on_press: root.load(colorpicker)

<AdvancedOptions>
    GridLayout:
        cols: 1
        size: root.width, root.height

        CustomSpinner:
            id_parameter: 'corr_method'
            label_text: 'Correlation method'
            initial_option: 'pearson'
            spinner_list: ["pearson", "kendall", "spearman"]

        CustomSpinner:
            id_parameter: 'pval_test'
            label_text: 'Test method'
            initial_option: 't.test'
            spinner_list: ["t.test", "wilcox"]

        CustomSpinner:
            id_parameter: 'pval_label'
            label_text: 'p-values label'
            initial_option: 'stars'
            spinner_list: ["stars", "numbers"]

        CustomSpinner:
            id_parameter: 'color_gradient'
            label_text: 'Color gradient'
            initial_option: 'RdBu'
            spinner_list: ["RdBu","PuRd","YlGn","BrBG","PiYG","PRGn","PuOr","RdGy","RdYlBu","RdYlGn","PuBuGn","BuGn","BuPu","GnBu","OrRd","RdPu","PuBu","YlGnBu","YlOrBr","YlOrRd","Reds","Blues","Greens","Greys","Oranges","Purples","Spectral","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3"]

        GridLayout:
            cols: 2
            AnchorLayout:
                Button:
                    size_hint: .7, .9
                    text: 'See color gradients'
                    on_press: root.open_popup()
            Label:


        CustomSpinner:
            id_parameter: 'n_custom_quantiles'
            label_text: 'Number of custom levels'
            spinner_list: ["2","3","4","5","6"]
            initial_option: '3'

        CustomSpinner:
            id_parameter: 'save_table'
            label_text: 'Save ID data to file'
            initial_option: 'FALSE'
            spinner_list: ["FALSE", "TRUE"]

        GridLayout:
            cols: 2
            Label:
                text: 'Discrete parameters'
            AnchorLayout:
                TextInput:
                    id: discrete_params
                    size_hint: .8, .8
                    multiline: False
                    hint_text: 'Seperated by ","'
                    on_text: root.update_discrete_params()

        CustomCheckbox:
            id_parameter: 'do_remove_outliers'
            label_text: 'Remove outliers'
            check_box: True

        CustomCheckbox:
            size_hint: .4, .6
            id_parameter: 'do_survival_analysis'
            label_text: 'Run survival analysis'
            check_box: False

        CustomSpinner:
            id_parameter: 'surv_time_column'
            label_text: 'Survival time column'
            spinner_list: app.getRowAnnCols()
            ann: 'rowAnn'

        CustomSpinner:
            id_parameter: 'surv_status_column'
            label_text: 'Censoring status column'
            spinner_list: app.getRowAnnCols()
            ann: 'rowAnn'

        GridLayout:
            cols: 2
            CustomCheckbox:
                id_parameter: 'do_impute'
                label_text: 'Run imputed version'
                check_box: False
            BoxLayout:
                orientation: 'vertical'
                Label:
                    text: str(impute_with_mean.value) + "% around mean (columnwise)"
                    font_size: app.text_size
                Slider:
                    id: impute_with_mean
                    range: 0.5, 10
                    step: 0.5
                    value: root.impute_val
                    on_value: root.update_impute_perc(); root.impute_val = self.value;
                    value_track: True
                    value_track_color: [1, 0, 1, 1]


<ColorPalettePopup>:
    title: ''
    size_hint: .4, .8

    GridLayout:
        cols: 1
        Image:
            source: 'Icons/RColorBrewer_palettes.png'

        Button:
            size_hint: 0.4, 0.1
            text: "Cancel"
            on_release: root.dismiss()

<RunHourglass>
    GridLayout:
        size: root.width, root.height
        cols: 1

        Label:
            text: 'Required for ByPatient/paired:'
            halign: 'left'
            color: 1,0,1,1

        CustomSpinner:
            id_parameter: 'patient_id_column'
            label_text: 'Select Patient ID column'
            spinner_list: app.getRowAnnCols()
            ann: 'rowAnn'

        Label:
            text: 'Quality Control Plots:'
            halign: 'left'
            color: 1,0,1,1

        CustomCheckbox:
            label_text: 'QC feature boxplots'
            id_parameter: 'qc_feature_boxplots'
            color: 1,0,1,1
            check_box: True

        CustomCheckbox:
            label_text: 'QC parameter boxplots'
            id_parameter: 'qc_param_boxplots'
            color: 1,0,1,1
            check_box: False

        CustomCheckbox:
            id_parameter: 'do_paired_analysis'
            label_text: 'Patient-paired plots'
            check_box: False

        Label:
            text: 'Feature Set Plots:'
            halign: 'left'
            color: 1,0,1,1

        CustomCheckbox:
            id_parameter: 'boxplot_indiv'
            label_text: 'Individual boxplots'

        CustomCheckbox:
            id_parameter: 'boxplot_overview'
            label_text: 'Overview boxplots'

        CustomCheckbox:
            id_parameter: 'heatmap'
            label_text: 'Heatmaps'

        CustomCheckbox:
            id_parameter: 'corrplot'
            label_text: 'Correlation plots'

        CustomCheckbox:
            id_parameter: 'corrscatt_overview'
            label_text: 'Correlation scatter'

        CustomCheckbox:
            id_parameter: 'pval_FC_heatmap'
            label_text: 'p-value/fold-change heatmap'

        CustomCheckbox:
            id_parameter: 'barplot_profile'
            label_text: 'Profile barplots'

        CustomCheckbox:
            id_parameter: 'barplot_het'
            label_text: 'Heterogeneity barplots'
            active: False
        GridLayout:
            cols: 3
            AnchorLayout:
                Button:
                    size_hint: .9, .9 #todo switch .9 back to .5,.8
                    text: 'Create output spreadsheet'
                    on_press: root.open_folderchooser()

            Label:
                size_hint_x: 0.1
                text: "or"

            AnchorLayout:
                Button:
                    size_hint: .9, .9
                    text: 'Use existing spreadsheet'
                    on_press: root.open_spreadsheet()

        AnchorLayout:
            Button:
                size_hint: .5, .9
                text: 'Run Hourglass'
                background_color: [1, 0, 1, 1]
                on_press: root.startup()
                on_press: self.background_color = (1.0, 0.0, 0.0, 1.0) # red
                on_release: root.runHourglass()

<RunErrorPopup>:
    title: 'Error Occurred!'
    size_hint: .7, .7
    BoxLayout:
        orientation: 'vertical'
        Label:
            id: error_label
            text: root.error_text
            background_color: [0,0,0,1]
            text_size: self.width, None
            size_hint: 1, None
            height: self.texture_size[1]
        BoxLayout:
            size_hint: (1, 0.1)
            pos_hint: {'center_x': .5, 'center_y': .5}
            spacing: 20
            Button:
                size_hint: 1, 0.3
                text: "Cancel"
                on_release: root.dismiss()

<MessagePopup>:
    title: ''
    size_hint: .7, .7
    BoxLayout:
        Label:
            # text: "Hourglass run is complete! It took %s minutes. You may now close the application." % (root.label_text)
            text: root.label_text
            background_color: [0,0,0,1]
            text_size: self.width, None
            size_hint: 1, None
            pos_hint: {'center_x': .5, 'center_y': .5}
            height: self.texture_size[1]


<FolderChoosePopup>:
    title: "Choose a folder to direct output"
    size_hint: .9, .9
    auto_dismiss: False

    BoxLayout:
        orientation: "vertical"
        FileChooser:
            id: dirchooser
            dirselect: True
            FileChooserIconLayout

        BoxLayout:
            size_hint: 1, 0.1
            pos_hint: {'center_x': .5, 'center_y': .5}
            spacing: 20
            Button:
                text: "Select"
                on_release: root.dismiss()
                on_press: root.create_outfile(dirchooser.selection)
            Button:
                text: "Cancel"
                on_release: root.dismiss()

<ChooseExcelPopup>:
    title: "Select a spreadsheet to use as dataset"
    size_hint: .9, .9
    auto_dismiss: False

    BoxLayout:
        orientation: "vertical"
        FileChooser:
            id: paramchooser
            FileChooserIconLayout

        BoxLayout:
            size_hint: (1, 0.1)
            pos_hint: {'center_x': .5, 'center_y': .5}
            spacing: 20
            Button:
                text: "Select"
                on_release: root.dismiss()
                on_press: root.change_path(paramchooser.selection)
            Button:
                text: "Cancel"
                on_release: root.dismiss()

<KVTabLay>
    TabbedPanel:
        size: root.width, root.height
        do_default_tab: False
        tab_width:  450 # 300
        tab_height: 100 # todo 75

        TabbedPanelItem:
            text: 'Welcome'
            Welcome:

        TabbedPanelItem:
            text: 'Upload Data'
            UploadTable:

        TabbedPanelItem:
            text: 'Pick Comparisons'
            ComparisonTable:

        TabbedPanelItem:
            text: 'Define Feature Sets'
            FeatureSets:

        TabbedPanelItem:
            text: 'Advanced Options'
            AdvancedOptions:

        TabbedPanelItem:
            text: 'Customize Colours'
            CustomizeColors:

        TabbedPanelItem:
            text: 'Run Hourglass'
            RunHourglass:

[FileIconEntry@Widget]:
    locked: False
    path: ctx.path
    selected: self.path in ctx.controller().selection
    size_hint: None, None

    on_touch_down: self.collide_point(*args[1].pos) and ctx.controller().entry_touched(self, args[1])
    on_touch_up: self.collide_point(*args[1].pos) and ctx.controller().entry_released(self, args[1])
    size: '100dp', '100dp'

    canvas:
        Color:
            rgba: 1, 1, 1, 1 if self.selected else 0
        BorderImage:
            border: 8, 8, 8, 8
            pos: root.pos
            size: root.size
            source: 'atlas://data/images/defaulttheme/filechooser_selected'

    Image:
        size: '48dp', '48dp'
        source: 'atlas://data/images/defaulttheme/filechooser_%s' % ('folder' if ctx.isdir else 'file')
        pos: root.x + dp(24), root.y + dp(40)

    Label:
        text: ctx.name
        text_size: (root.width, self.height)
        font_size: '16sp' # redefine fileChooserIconView to set size of folder/file names
        halign: 'center'
        shorten: True
        size: '100dp', '16dp'
        pos: root.x, root.y + dp(16)

    Label:
        text: '{}'.format(ctx.get_nice_size())
        font_size: '14sp'
        color: .8, .8, .8, 1
        size: '100dp', '16sp'
        pos: root.pos
        halign: 'center'